---
import type { MarkdownLayoutProps } from "astro";
import Anchor from "../components/Anchor.astro";
import Prose from "../components/Prose.astro";
import Section from "../components/Section.astro";
import type { ProjectFrontmatter } from "../content/projects";
import { getShortDescription, generateSourceUrl } from "../lib/utils";
import { GLOBAL } from "../lib/variables";
import PageLayout from "./PageLayout.astro";

type Props = MarkdownLayoutProps<ProjectFrontmatter>;

const { frontmatter } = Astro.props;
const shortDescription = getShortDescription(frontmatter.description);
const sourceUrl = generateSourceUrl(frontmatter.filename, "projects");
---

<PageLayout>
  <Fragment slot="head">
    <title>{frontmatter.title} • {GLOBAL.alias}</title>
    <meta name="description" content={frontmatter.description} />
    <meta property="og:title" content={`${frontmatter.title} • ${GLOBAL.alias}`} />
    <meta property="og:description" content={shortDescription} />
    <meta property="og:image" content={`${GLOBAL.rootUrl}/${GLOBAL.avatar}`} />
    <meta property="og:url" content={frontmatter.url} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={`${frontmatter.title} • ${GLOBAL.alias}`} />
    <meta name="twitter:description" content={shortDescription} />
    <meta name="twitter:image" content={`${GLOBAL.rootUrl}/${GLOBAL.avatar}`} />
    <meta http-equiv="content-language" content="en" />
    <meta name="language" content="English" />
    <link rel="canonical" href={sourceUrl} />
  </Fragment>
  <Section class="mt-8">
    <div class="flex flex-col gap-4 mt-8 mb-16">
      <h1 class="text-3xl sm:text-4xl leading-tight font-display">
        {frontmatter.title}
      </h1>
      <div class="flex text-sm gap-2">
        {
          frontmatter.tags
            ? frontmatter.tags.map((tag) => (
                <span class="-zag-text -zag-bg zag-transition font-semibold py-1 px-2">{tag}</span>
              ))
            : null
        }
      </div>
      <div class="flex gap-2">
        {
          frontmatter.githubUrl ? (
            <Anchor url={frontmatter.githubUrl} class="text-base" external>
              GitHub
            </Anchor>
          ) : null
        }
        {
          frontmatter.liveUrl ? (
            <Anchor url={frontmatter.liveUrl} class="text-base" external>
              Live
            </Anchor>
          ) : null
        }
      </div>
    </div>
    <Prose>
      <slot />
    </Prose>
  </Section>
</PageLayout>
